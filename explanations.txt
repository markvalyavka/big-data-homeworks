


Query 1 
-------
Оскільки product_id - це partition key, ми отримаємо всі відгуки. Це має відбутись за одну операцію read, так як дані
будуть на одній ноді


Query 2
-------
Це query оптимальне, бо star-rating - це clustering key, відповідно ми ефективно можемо його юзати у WHERE clause


Query 3
-------
Ситуація аналогічна як в Query 1. customer_id - це partition key


Query 4
-------
Тут найкраще буде зберігати review_count для кожного customer_id (в окремій колонці), і апдейтити його кожного разу коли певний customer_id
пише відгук. Cassandra не дозволяє HAVING після GROUP BY + не дасть відсортувати по count(*).
Це query оптимальне, бо product_id - це partition key, а review_count - clustering key, для якого відповідно будуть ефективні
операції з нерівностями


Query 5
-------
Тут customer_id - це partition key. І операція "star_rating > 3" ефективна, бо star_rating це clustering key колонка, для якої операції
з нерівностями будуть ефективні